<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>PURGE_DATA</name>
          <description>Drops and creates the DB, cleans the binary repository</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DB_NAME</name>
          <description>Default is $JOB_NAME</description>
          <defaultValue>$JOB_NAME</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DATA_DIR</name>
          <description>Default is $HOME/omero-server-data</description>
          <defaultValue>$HOME/omero-server-data</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OMERO_SERVER_ZIP_URL</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>omero</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>OMERO_INSTALL=/tmp/omero-install/linux
source $OMERO_INSTALL/settings.env
OMERO_DB_NAME=$DB_NAME
OMERO_DIST=$WORKSPACE/OMERO.server
OMERO_DATA_DIR=$DATA_DIR

if [ -e $OMERO_DIST ]; then
    if [ -e $WORKSPACE/omero-virtualenv ]; then
        source $WORKSPACE/omero-virtualenv/bin/activate
    fi
    $OMERO_DIST/bin/omero admin stop || echo First build
    sleep 5
    if [ -e $WORKSPACE/omero-virtualenv ]; then
        deactivate
    fi
fi


if [ &quot;$PURGE_DATA&quot; = &quot;true&quot; ]; then
    dropdb -h $OMERO_DB_HOST -U $OMERO_DB_USER $OMERO_DB_NAME || echo &quot;First run or already exists&quot;
    rm -rf $OMERO_DATA_DIR
else
    echo &quot;Skipping PURGE_DATA:CleanDbAndRepo&quot;
fi

rm -rf $WORKSPACE/*</command>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.42">
      <project>OMERO-build</project>
      <filter>src/target/OMERO.server*zip</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>OMERO_INSTALL=/tmp/omero-install/linux
source $OMERO_INSTALL/settings.env
OMERO_DB_NAME=$DB_NAME
OMERO_DATA_DIR=$DATA_DIR

mkdir -p $OMERO_DATA_DIR

# UNZIP SERVER
OMERO_DIST=$WORKSPACE/OMERO.server

ZIP=$(ls OMERO.server*.zip)
if [ ! -z &quot;$OMERO_SERVER_ZIP_URL&quot; ]
then
   rm -f $ZIP
   wget -q $OMERO_SERVER_ZIP_URL
   ZIP=$(basename $OMERO_SERVER_ZIP_URL)
fi
DIST=${ZIP%.zip}
unzip $ZIP
rm -f $ZIP
mv $WORKSPACE/$DIST $OMERO_DIST

# CREATE VirtualEnv
virtualenv $WORKSPACE/omero-virtualenv --system-site-packages
source $WORKSPACE/omero-virtualenv/bin/activate

pip install https://github.com/ome/zeroc-ice-py-manylinux/releases/download/0.1.0/zeroc_ice-3.6.5-cp36-cp36m-manylinux2010_x86_64.whl
pip install -U pip future
pip install -U --pre omego
pip install tables
pip install pillow
pip install jinja2
pip install reportlab
pip install markdown
pip install git+git://github.com/snoopycrimecop/omero-metadata.git@$MERGE_PUSH_BRANCH#egg=omero-metadata

## LOAD CONFIG

# LOAD EXTRA CONFIG
#$OMERO_DIST/bin/omero load configfile.omero

# DEFAULT CONFIG
$OMERO_DIST/bin/omero config set omero.db.name $OMERO_DB_NAME
$OMERO_DIST/bin/omero config set omero.db.host $OMERO_DB_HOST
$OMERO_DIST/bin/omero config set omero.db.user $OMERO_DB_USER
$OMERO_DIST/bin/omero config set omero.data.dir $OMERO_DATA_DIR
$OMERO_DIST/bin/omero config set omero.fs.repo.path &quot;%user%_%userId%/%thread%//%year%-%month%/%day%/%time%&quot;
$OMERO_DIST/bin/omero config set omero.db.poolsize 25
$OMERO_DIST/bin/omero config set omero.security.trustStore /etc/pki/ca-trust/extracted/java/cacerts
$OMERO_DIST/bin/omero config set omero.security.trustStorePassword changeit
## END LOAD CONFIG


## PURGE

if [ &quot;$PURGE_DATA&quot; = &quot;true&quot; ]; then
    createdb -h $OMERO_DB_HOST -U $OMERO_DB_USER $OMERO_DB_NAME
    omego db init --serverdir $OMERO_DIST --dbname $OMERO_DB_NAME
else
    echo &quot;Skipping PURGE_DATA:CleanDbAndRepo. Check for DB upgrade&quot;
    omego db upgrade --serverdir $OMERO_DIST --dbname $OMERO_DB_NAME
fi

## END PURGE

BUILD_ID=DONT_KILL_ME $OMERO_DIST/bin/omero admin start

# WAIT FOR OMERO TO START UP AND ACCEPT CONNECTIONS
$OMERO_DIST/bin/omero admin waitup
$OMERO_DIST/bin/omero admin diagnostics

deactivate</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.9"/>
  </buildWrappers>
</project>